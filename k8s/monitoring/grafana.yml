---
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: monitoring
  labels:
    app: grafana
data:
  datasources.yml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
        editable: false
        basicAuth: true
        basicAuthUser: admin
        secureJsonData:
          basicAuthPassword: "jSiakLl10"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-conf
  namespace: monitoring
  labels:
    app: grafana
data:
  dashboards.yml: |
    apiVersion: 1
    providers:
      - name: 'dashboards'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards
          foldersFromFilesStructure: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-data
  namespace: monitoring
  labels:
    app: grafana

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: aws-efs
provisioner: efs.csi.aws.com

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-data
spec:
  capacity:
    storage: 1Mi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: aws-efs
  csi:
    driver: efs.csi.aws.com
    volumeHandle: fs-0395709676a51d3a1

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-data
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: aws-efs
  resources:
    requests:
      storage: 1Mi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        runAsUser: 0
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
          - containerPort: 3000
        volumeMounts:
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards-conf
          mountPath: /etc/grafana/provisioning/dashboards
        - name: grafana-dashboards-data
          mountPath: /var/lib/grafana/dashboards       
        - name: grafana-data
          mountPath: /var/lib/grafana/
        env:
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana-secrets
                key: user
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana-secrets
                key: pass
          - name: GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH
            value: "/var/lib/grafana/dashboards/main_dashboard.json"
          - name: GF_SERVER_DOMAIN
            value: "monitoring.gear-tech.io"
          - name: GF_SERVER_ROOT_URL
            value: "%(protocol)s://%(domain)s:/grafana"
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards-conf
          configMap:
            name: grafana-dashboards-conf
        - name: grafana-dashboards-data
          configMap:
            name: grafana-dashboards-data
        - name: grafana-data
          persistentVolumeClaim:
            claimName: grafana-data

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  selector:
    app: grafana
  ports:
  - name: grafana
    protocol: TCP
    port: 3000

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  namespace: monitoring
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - monitoring.gear-tech.io
      secretName: tlscert-with-ca
  rules:
    - host: monitoring.gear-tech.io
      http:
        paths:
          - path: /grafana(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
